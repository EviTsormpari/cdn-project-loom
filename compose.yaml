services:
  # -----------------------
  # PostgreSQL Origin DB
  # -----------------------
  postgres:
    image: postgres:latest
    container_name: postgres-container
    environment:
      - POSTGRES_DB=origin_server
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postGreSql2003
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # -----------------------
  # Origin Spring Boot
  # -----------------------
  origin:
    build: ./CdnOriginServer
    container_name: origin-container
    ports:
      - "8083:8083"
    environment:
      - SERVER_PORT=8083
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/origin_server
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postGreSql2003
      - ORIGIN_FILEPATH=/app/files
      - EDGE1_URL=http://edge1:8081/api/v1/files/
      - EDGE2_URL=http://edge2:8082/api/v1/files/
    volumes:
    - ./CdnOriginServer/files/origin_files:/app/files
    depends_on:
      - postgres

  # -----------------------
  # Redis Containers
  # -----------------------
  redis1:
    image: redis:latest
    container_name: redis1
    ports:
      - "6380:6380"
    volumes:
      - ./CdnEdgeServer/redis/redis1.conf:/usr/local/etc/redis/redis1.conf
    command: ["redis-server", "/usr/local/etc/redis/redis1.conf"]

  redis2:
    image: redis:latest
    container_name: redis2
    ports:
      - "6379:6379"
    volumes:
      - ./CdnEdgeServer/redis/redis2.conf:/usr/local/etc/redis/redis2.conf
    command: ["redis-server", "/usr/local/etc/redis/redis2.conf"]

  # -----------------------
  # Edge Spring Boot Containers
  # -----------------------
  edge1:
    build: ./CdnEdgeServer
    container_name: edge1-container
    environment:
      - SERVER_PORT=8081
      - SPRING_DATA_REDIS_HOST=redis1
      - SPRING_DATA_REDIS_PORT=6380
      - EDGE_FILEPATH=/app/files
      - ORIGIN_URL=http://origin:8083/api/v1/files/
    ports:
      - "8081:8081"
    volumes:
      - ./CdnEdgeServer/files/edge1_files:/app/files
    depends_on:
      - redis1
      - origin

  edge2:
    build: ./CdnEdgeServer
    container_name: edge2-container
    environment:
      - SERVER_PORT=8082
      - SPRING_DATA_REDIS_HOST=redis2
      - SPRING_DATA_REDIS_PORT=6379
      - EDGE_FILEPATH=/app/files
      - ORIGIN_URL=http://origin:8083/api/v1/files/
    ports:
      - "8082:8082"
    volumes:
      - ./CdnEdgeServer/files/edge2_files:/app/files
    depends_on:
      - redis2
      - origin

  # -----------------------
  # Nginx Load Balancer
  # -----------------------
  nginx:
    image: nginx:latest
    container_name: nginx-container
    ports:
      - "8080:8080"
    volumes:
      - ./LoadBalancer/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - edge1
      - edge2
  
   # -----------------------
  # InfluxDB
  # -----------------------
  influxdb:
    image: influxdb:1.8
    container_name: influxdb-container
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6
      - INFLUXDB_ADMIN_ENABLED=true
    volumes:
      - ./influxdb_data:/var/lib/influxdb

  # -----------------------
  # Grafana
  # -----------------------
  grafana:
    image: grafana/grafana:latest
    container_name: grafana-container
    ports:
      - "3000:3000"
    volumes:
    - ./grafana_data:/var/lib/grafana
    depends_on:
      - influxdb

  # -----------------------
  # K6
  # -----------------------
  k6:
    image: grafana/k6:latest
    container_name: k6-container
    depends_on:
      - nginx
      - influxdb
    volumes:
      - ./scripts/load_test_script.js:/scripts/load_test_script.js
    entrypoint: ["sh", "-c"]
    command: ["sleep infinity"]

# -----------------------
# Volumes for persistency
# -----------------------
volumes:
  postgres_data: